version: '3.9'

services:
  postgres:
    container_name: postgres
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -q -d ${POSTGRES_DB} -h localhost -p ${POSTGRES_PORT} -U ${POSTGRES_USER}'
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      prakrikum:
  server:
    container_name: backend
    image: praktikum-server
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      HOST: ${HOST}
      POSTGRES_HOST: ${POSTGRES_HOST}
    expose:
      - '3001'
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD',
          'pg_isready',
          '-h',
          'localost',
          '-p',
          '${POSTGRES_PORT}',
          '-U',
          '${POSTGRES_USER}'
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      prakrikum:
  nginx:
    restart: always
    image: nginx:latest
    build:
      context: .
      dockerfile: Dockerfile-nginx
    ports:
      - '80:80'
      - '443:443'
    container_name: praktikum-server_nginx
    expose:
      - 80
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:82']
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      prakrikum:
  # certbot:
  #   container_name: certbot
  #   ports:
  #     - "6000:80"
  #   # и снова мониторуем директорию nginx
  #   volumes:
  #     - ./nginx/:/etc/nginx/
  #   build:
  #     context: ./certbot
  #     dockerfile: Dockerfile
  #     # задаем переменные среды
  #     args:
  #       DOMAIN_EMAIL: miden99@gmail.com
  #       DOMAIN_URL: fantastic.ya-praktikum.tech

networks:
  prakrikum:
    name: prakrikum
